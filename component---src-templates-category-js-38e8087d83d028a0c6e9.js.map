{"version":3,"file":"component---src-templates-category-js-38e8087d83d028a0c6e9.js","mappings":"0MAKMA,EAASC,EAAQ,MAEFC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,MAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,EAAAA,EAAAA,UAgDlB,OAhDkBA,EACnBC,YAAA,WACE,IAAQC,EAAcC,KAAKC,MAAnBF,UACFG,EAAmC,KAAtBP,EAAOO,WAAoB,IAAMP,EAAOO,WAa3D,OAZiBH,EAAUI,KAAI,SAAAC,GAAQ,MACrC,CACEC,KAAMH,EAAaE,EAASE,KAAKC,iBAAiBC,MAAM,KAAKC,OAAO,GAAG,GAAGC,OAAO,IACjFC,KAAMP,EAASE,KAAKM,YAAYD,KAChCE,UAAWT,EAASE,KAAKM,YAAYC,UACrCC,MAAOV,EAASE,KAAKM,YAAYE,MACjCC,MAAMC,EAAAA,EAAAA,GAAWZ,EAASE,KAAKC,iBAAiBC,MAAM,KAAKC,OAAO,GAAG,GAAGC,OAAO,EAAG,KAClFO,QAASb,EAASE,KAAKW,QACvBC,WAAYd,EAASE,KAAKY,WAC1BC,WAAYf,EAASE,KAAKM,YAAYO,gBAI3C,EAEDC,OAAA,WACE,IAAMC,EAAWrB,KAAKF,cAEtB,OACE,2BAASwB,UAAU,SAChBD,EAASlB,KAAI,SAAAoB,GACZ,IAAIV,EASJ,OARIU,EAAKV,YAELA,EADEU,EAAKV,UAAUW,gBACL,gBAAC,EAAAC,EAAD,CAAaC,MAAOH,EAAKV,UAAUW,gBAAgBG,kBAEnD,uBAAKL,UAAU,wBAAuB,uBAAKM,IAAKL,EAAKV,UAAUgB,UAAWC,IAAI,OAK5F,gBAAC,EAAAC,KAAD,CAAMC,GAAIT,EAAKlB,KAAM4B,IAAKV,EAAKT,OAC7B,uBAAKQ,UAAU,QACZT,GAAa,4BACd,uBAAKS,UAAU,kBACb,0BAAKC,EAAKT,OACV,uBAAKQ,UAAU,YAAYC,EAAKR,cAQ/C,EAhDkBlB,CAAoBqC,EAAAA,Y,2ICApBC,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAclB,OAdkBA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACnBf,OAAA,WACE,IAAQgB,EAAapC,KAAKC,MAAMoC,YAAxBD,SACFrC,EAAYC,KAAKC,MAAMqC,KAAKC,kBAAkBC,MAEpD,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAQ1B,MAAK,sBAAwBsB,EAAxB,OAAuCzC,IAAAA,YACpD,uBAAK2B,UAAU,aACb,0BAAKc,GACL,gBAAC,IAAD,CAAarC,UAAWA,OAI/B,EAdkBoC,CAAyBD,EAAAA","sources":["webpack://blog.beerus.fr/./src/components/PostListing.js","webpack://blog.beerus.fr/./src/templates/category.js"],"sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { formatDate } from '../utils/global'\n\nconst config = require('../../data/SiteConfig')\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const pathPrefix = config.pathPrefix === '' ? '/' : config.pathPrefix\n    const postList = postEdges.map(postEdge => (\n      {\n        path: pathPrefix + postEdge.node.fileAbsolutePath.split('/').slice(-2)[0].substr(11),\n        tags: postEdge.node.frontmatter.tags,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        title: postEdge.node.frontmatter.title,\n        date: formatDate(postEdge.node.fileAbsolutePath.split('/').slice(-2)[0].substr(0, 10)),\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        categories: postEdge.node.frontmatter.categories,\n      }\n    ))\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n\n    return (\n      <section className=\"posts\">\n        {postList.map(post => {\n          let thumbnail\n          if (post.thumbnail) {\n            if (post.thumbnail.childImageSharp) {\n              thumbnail = <GatsbyImage image={post.thumbnail.childImageSharp.gatsbyImageData} />\n            } else {\n              thumbnail = <div className=\"gatsby-image-wrapper\"><img src={post.thumbnail.publicURL} alt=\"\" /></div>\n            }\n          }\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                {thumbnail || <div />}\n                <div className=\"each-list-item\">\n                  <h2>{post.title}</h2>\n                  <div className=\"datetime\">{post.date}</div>\n                </div>\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { Helmet } from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class CategoryTemplate extends Component {\n  render() {\n    const { category } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n\n    return (\n      <Layout>\n        <Helmet title={`Posts in category \"${category}\" â€“ ${config.siteTitle}`} />\n        <div className=\"container\">\n          <h1>{category}</h1>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fileAbsolutePath], order: DESC }\n      filter: { frontmatter: { categories: { in: [$category] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          fileAbsolutePath\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(\n                  layout: FIXED\n                  width: 150\n                  height: 150\n                  quality: 100\n                  placeholder: BLURRED\n                )\n              }\n              extension\n              publicURL\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["config","require","PostListing","getPostList","postEdges","this","props","pathPrefix","map","postEdge","path","node","fileAbsolutePath","split","slice","substr","tags","frontmatter","thumbnail","title","date","formatDate","excerpt","timeToRead","categories","render","postList","className","post","childImageSharp","G","image","gatsbyImageData","src","publicURL","alt","Link","to","key","Component","CategoryTemplate","category","pageContext","data","allMarkdownRemark","edges"],"sourceRoot":""}